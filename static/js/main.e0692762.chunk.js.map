{"version":3,"sources":["Components/MovieCounter/index.js","Components/common/Like/index.js","Components/MovieTable/index.js","services/fakeGenreService.js","services/fakeMovieService.js","Components/common/Pagination/index.js","Components/common/ListGroup/index.js","Components/App/index.js","utils/paginate.js","serviceWorker.js","index.js"],"names":["Counter","props","movieCount","Like","classes","liked","onClick","onLike","movie","className","aria-hidden","MovieTable","raiseSort","path","sortColumn","order","onSort","this","moviesPaginated","onDelete","Fragment","map","m","key","_id","title","genre","name","numberInStock","dailyRentalRate","Component","genres","movies","publishDate","Pagination","itemsCount","itemsPerPage","onPageChange","currentPage","pagesCount","Math","ceil","pages","i","page","href","ListGroup","items","valueProperty","textProperty","onItemSelect","selectedItem","item","defaultProps","App","state","selectedGenre","handleLike","index","indexOf","setState","handleDelete","filter","length","handlePageChange","handleGenreSelect","handleSort","g","moviesFiltered","pageNumber","pageSize","startIndex","_","slice","take","value","paginate","orderBy","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e0692762.chunk.js","sourcesContent":["import React from 'react';\n\nconst Counter = props => {\n\treturn <p>Showing {props.movieCount} movies in the database.</p>;\n};\n\nexport default Counter;\n","import React from 'react';\nimport './Like.css';\n\n// Stateless functional components don't need a this anywhere as props is passed as an argument. They also require the export to be separate.\n\nconst Like = props => {\n\tlet classes = 'fa fa-heart';\n\tif (!props.liked) classes += '-o';\n\treturn (\n\t\t<i\n\t\t\tonClick={() => props.onLike(props.movie)}\n\t\t\tclassName={classes}\n\t\t\taria-hidden=\"true\"\n\t\t/>\n\t);\n};\n\nexport default Like;\n","import React, { Component } from 'react';\nimport './MovieTable.css';\nimport Like from '../common/Like';\nimport { map } from 'lodash';\n\nclass MovieTable extends Component {\n\traiseSort = path => {\n\t\tlet sortColumn = { ...this.props.sortColumn };\n\t\tif (sortColumn.path === path) {\n\t\t\tsortColumn = sortColumn.order === 'asc' ? 'desc' : 'asc';\n\t\t} else {\n\t\t\tsortColumn.path = path;\n\t\t\tsortColumn.order = 'asc';\n\t\t}\n\t\tthis.props.onSort(sortColumn);\n\t};\n\n\trender() {\n\t\tconst { moviesPaginated, onLike, onDelete } = this.props;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th onClick={() => this.raiseSort('title')}>Title</th>\n\t\t\t\t\t\t\t<th onClick={() => this.raiseSort('genre.name')}>Genre</th>\n\t\t\t\t\t\t\t<th onClick={() => this.raiseSort('numberInStock')}>Stock</th>\n\t\t\t\t\t\t\t<th onClick={() => this.raiseSort('dailyRentalRate')}>Rate</th>\n\t\t\t\t\t\t\t<th />\n\t\t\t\t\t\t\t<th />\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{moviesPaginated.map(m => (\n\t\t\t\t\t\t\t<tr key={m._id}>\n\t\t\t\t\t\t\t\t<td>{m.title}</td>\n\t\t\t\t\t\t\t\t<td>{m.genre.name}</td>\n\t\t\t\t\t\t\t\t<td>{m.numberInStock}</td>\n\t\t\t\t\t\t\t\t<td>{m.dailyRentalRate}</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Like liked={m.liked} onLike={() => onLike(m)} />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={() => onDelete(m)}\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger btn-sm\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default MovieTable;\n","export const genres = [\n\t{ _id: '5b21ca3eeb7f6fbccd471818', name: 'Action' },\n\t{ _id: '5b21ca3eeb7f6fbccd471814', name: 'Comedy' },\n\t{ _id: '5b21ca3eeb7f6fbccd471820', name: 'Thriller' }\n];\n\nexport function getGenres() {\n\treturn genres.filter(g => g);\n}\n","import * as genresAPI from './fakeGenreService';\n\nconst movies = [\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd471815',\n\t\ttitle: 'Terminator',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471818', name: 'Action' },\n\t\tnumberInStock: 6,\n\t\tdailyRentalRate: 2.5,\n\t\tpublishDate: '2018-01-03T19:04:28.809Z'\n\t},\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd471816',\n\t\ttitle: 'Die Hard',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471818', name: 'Action' },\n\t\tnumberInStock: 5,\n\t\tdailyRentalRate: 2.5\n\t},\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd471817',\n\t\ttitle: 'Get Out',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471820', name: 'Thriller' },\n\t\tnumberInStock: 8,\n\t\tdailyRentalRate: 3.5\n\t},\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd471819',\n\t\ttitle: 'Trip to Italy',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471814', name: 'Comedy' },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 3.5\n\t},\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd47181a',\n\t\ttitle: 'Airplane',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471814', name: 'Comedy' },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 3.5\n\t},\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd47181b',\n\t\ttitle: 'Wedding Crashers',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471814', name: 'Comedy' },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 3.5\n\t},\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd47181e',\n\t\ttitle: 'Gone Girl',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471820', name: 'Thriller' },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 4.5\n\t},\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd47181f',\n\t\ttitle: 'The Sixth Sense',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471820', name: 'Thriller' },\n\t\tnumberInStock: 4,\n\t\tdailyRentalRate: 3.5\n\t},\n\t{\n\t\t_id: '5b21ca3eeb7f6fbccd471821',\n\t\ttitle: 'The Avengers',\n\t\tgenre: { _id: '5b21ca3eeb7f6fbccd471818', name: 'Action' },\n\t\tnumberInStock: 7,\n\t\tdailyRentalRate: 3.5\n\t}\n];\n\nexport function getMovies() {\n\treturn movies;\n}\n\nexport function getMovie(id) {\n\treturn movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n\tlet movieInDb = movies.find(m => m._id === movie._id) || {};\n\tmovieInDb.name = movie.name;\n\tmovieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n\tmovieInDb.numberInStock = movie.numberInStock;\n\tmovieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n\tif (!movieInDb._id) {\n\t\tmovieInDb._id = Date.now();\n\t\tmovies.push(movieInDb);\n\t}\n\n\treturn movieInDb;\n}\n\nexport function deleteMovie(id) {\n\tlet movieInDb = movies.find(m => m._id === id);\n\tmovies.splice(movies.indexOf(movieInDb), 1);\n\treturn movieInDb;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pagination = props => {\n\tconst { itemsCount, itemsPerPage, onPageChange, currentPage } = props;\n\tconst pagesCount = Math.ceil(itemsCount / itemsPerPage);\n\tif (pagesCount <= 1) return null;\n\tconst pages = [];\n\tfor (let i = 0; i < pagesCount; i++) {\n\t\tpages[i] = i + 1;\n\t}\n\n\treturn (\n\t\t<nav>\n\t\t\t<ul className=\"pagination\">\n\t\t\t\t{pages.map(page => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={page}\n\t\t\t\t\t\tclassName={page === currentPage ? 'page-item active' : 'page-item'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"#main\"\n\t\t\t\t\t\t\tclassName=\"page-link\"\n\t\t\t\t\t\t\tonClick={() => onPageChange(page)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{page}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\n\nPagination.propTypes = {\n\titemsCount: PropTypes.number.isRequired,\n\titemsPerPage: PropTypes.number.isRequired,\n\tonPageChange: PropTypes.func.isRequired,\n\tcurrentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from 'react';\n\nconst ListGroup = props => {\n\tconst {\n\t\titems,\n\t\tvalueProperty,\n\t\ttextProperty,\n\t\tonItemSelect,\n\t\tselectedItem\n\t} = props;\n\treturn (\n\t\t<ul className=\"list-group\">\n\t\t\t{items.map(item => (\n\t\t\t\t<li\n\t\t\t\t\tkey={item[valueProperty]}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\titem._id === selectedItem._id\n\t\t\t\t\t\t\t? 'list-group-item active'\n\t\t\t\t\t\t\t: 'list-group-item'\n\t\t\t\t\t}\n\t\t\t\t\tonClick={() => onItemSelect(item)}\n\t\t\t\t>\n\t\t\t\t\t{item[textProperty]}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\n// Use bracket notation in the list element above to access properties dynamically instead of dot notation. Allows to be reused for any kind of lists in the future.\n\nListGroup.defaultProps = {\n\ttextProperty: 'name',\n\tvalueProperty: '_id'\n};\n\n// Default props above are used to clean up the component props in the parent component.\n\nexport default ListGroup;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Counter from '../MovieCounter';\nimport MovieTable from '../MovieTable';\nimport { getMovies } from '../../services/fakeMovieService';\nimport { getGenres } from '../../services/fakeGenreService';\nimport Pagination from '../common/Pagination';\nimport paginate from '../../utils/paginate';\nimport ListGroup from '../common/ListGroup';\nimport _ from 'lodash';\n\nexport default class App extends Component {\n\tstate = {\n\t\tmovies: [],\n\t\tgenres: [],\n\t\titemsPerPage: 4,\n\t\tcurrentPage: 1,\n\t\tselectedGenre: { _id: '', name: 'All Genres' }, // current solution to a default genre\n\t\tsortColumn: { path: 'title', order: 'asc' }\n\t};\n\n\t// this lifecycle method is called when an instance of this component is rendered in the DOM\n\tcomponentDidMount() {\n\t\tconst genres = [this.state.selectedGenre, ...getGenres()];\n\t\tthis.setState({ movies: getMovies(), genres });\n\t}\n\n\thandleLike = movie => {\n\t\tconst movies = [...this.state.movies];\n\t\tconst index = movies.indexOf(movie);\n\t\tmovies[index] = { ...movies[index] };\n\t\tmovies[index].liked = !movies[index].liked;\n\t\tthis.setState({ movies });\n\t};\n\n\thandleDelete = movie => {\n\t\tconst movies = this.state.movies.filter(m => m._id !== movie._id);\n\t\tconst movieCount = movies.length;\n\t\tthis.setState({ movies, movieCount });\n\t};\n\n\thandlePageChange = page => {\n\t\tthis.setState({ currentPage: page });\n\t};\n\n\thandleGenreSelect = genre => {\n\t\tthis.setState({ selectedGenre: genre, currentPage: 1 });\n\t};\n\n\thandleSort = sortColumn => {\n\t\tthis.setState({ sortColumn });\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tmovies,\n\t\t\tgenres,\n\t\t\titemsPerPage,\n\t\t\tcurrentPage,\n\t\t\tselectedGenre,\n\t\t\tsortColumn\n\t\t} = this.state;\n\n\t\tconst { length: movieCount } = movies;\n\n\t\tif (movieCount === 0) return <p>There are no movies in the database</p>;\n\n\t\tconst moviesFiltered =\n\t\t\tselectedGenre.name !== 'All Genres'\n\t\t\t\t? movies.filter(movie => movie.genre._id === selectedGenre._id)\n\t\t\t\t: movies;\n\n\t\tconst sortedMovies = _.orderBy(\n\t\t\tmoviesFiltered,\n\t\t\t[sortColumn.path],\n\t\t\t[sortColumn.order]\n\t\t);\n\n\t\tconst moviesPaginated = paginate(sortedMovies, currentPage, itemsPerPage);\n\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-2\">\n\t\t\t\t\t<ListGroup\n\t\t\t\t\t\titems={genres}\n\t\t\t\t\t\tonItemSelect={this.handleGenreSelect}\n\t\t\t\t\t\tselectedItem={selectedGenre}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t<Counter movieCount={moviesFiltered.length} />\n\t\t\t\t\t<MovieTable\n\t\t\t\t\t\tmoviesPaginated={moviesPaginated}\n\t\t\t\t\t\tonLike={this.handleLike}\n\t\t\t\t\t\tonDelete={this.handleDelete}\n\t\t\t\t\t\tonSort={this.handleSort}\n\t\t\t\t\t\tsortColumn={sortColumn}\n\t\t\t\t\t/>\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\titemsCount={moviesFiltered.length}\n\t\t\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\t\t\tonPageChange={this.handlePageChange}\n\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import _ from 'lodash';\n\nexport default function paginate(items, pageNumber, pageSize) {\n\tconst startIndex = (pageNumber - 1) * pageSize;\n\treturn _(items).slice(startIndex).take(pageSize).value();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}